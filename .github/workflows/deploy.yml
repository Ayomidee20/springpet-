name: CI/CD Pipeline for Spring PetClinic

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'    # You can either hardcode the region or use a secret

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/ec2-key.pem
          echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n" > ~/.ssh/config

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Test SSH connection first
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem ec2-user@${EC2_HOST} 'echo "SSH connection successful"'
          
          # Create deployment script
          echo "#!/bin/bash
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
          docker pull ${ECR_REGISTRY}:${IMAGE_TAG}
          docker stop petclinic || true
          docker rm petclinic || true
          docker run -d --name petclinic -p 8080:8080 ${ECR_REGISTRY}:${IMAGE_TAG}
          " > deploy.sh
          
          # Copy and execute deployment script
          scp -i ~/.ssh/ec2-key.pem deploy.sh ec2-user@${EC2_HOST}:~/deploy.sh
          ssh -i ~/.ssh/ec2-key.pem ec2-user@${EC2_HOST} 'chmod +x ~/deploy.sh && ~/deploy.sh'
